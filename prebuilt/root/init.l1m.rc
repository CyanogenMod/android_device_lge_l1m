import /init.grand.rc

on init

# Create cgroup mount point for cpu accounting
    mkdir /acct
    mount cgroup none /acct cpuacct
    mkdir /acct/uid

# Backwards Compat - XXX: Going away in G*
    symlink /mnt/sdcard /sdcard

    mkdir /system
    mkdir /data 0771 system system
    mkdir /cache 0770 system cache
    mkdir /config 0500 root root

    # Directory for putting things only root should see.
    mkdir /mnt/secure 0700 root root

    # Directory for staging bindmounts
    mkdir /mnt/secure/staging 0700 root root

    # Directory-target for where the secure container
    # imagefile directory will be bind-mounted
    mkdir /mnt/secure/asec  0700 root root

    # Secure container public mount points.
    mkdir /mnt/asec  0700 root system
    mount tmpfs tmpfs /mnt/asec mode=0755,gid=1000

    # Filesystem image public mount points.
    mkdir /mnt/obb 0700 root system
    mount tmpfs tmpfs /mnt/obb mode=0755,gid=1000

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/kernel/hung_task_timeout_secs 0
    write /proc/cpu/alignment 4
    write /proc/sys/kernel/sched_latency_ns 10000000
    write /proc/sys/kernel/sched_wakeup_granularity_ns 2000000
    write /proc/sys/kernel/sched_compat_yield 1
    write /proc/sys/kernel/sched_child_runs_first 0
    write /proc/sys/kernel/randomize_va_space 2

# Create cgroup mount points for process groups
     mkdir /dev/cpuctl
     mount cgroup none /dev/cpuctl cpu
     chown system system /dev/cpuctl
     chmod 0660 /dev/cpuctl
     chown system system /dev/cpuctl/tasks
     chmod 0660 /dev/cpuctl/tasks
     write /dev/cpuctl/cpu.shares 1024

    mkdir /dev/cpuctl/fg_boost
    chown system system /dev/cpuctl/fg_boost/tasks
    chmod 0777 /dev/cpuctl/fg_boost/tasks
    write /dev/cpuctl/fg_boost/cpu.shares 1024

    mkdir /dev/cpuctl/bg_non_interactive
    chown system system /dev/cpuctl/bg_non_interactive/tasks
    chmod 0777 /dev/cpuctl/bg_non_interactive/tasks
    # 5.0 %
    write /dev/cpuctl/bg_non_interactive/cpu.shares 52

on post-fs-data
    setprop ro.crypto.keyfile.userdata /dev/block/platform/msm_sdcc.1/by-name/encrypt
#    chown media_rw media_rw /mnt/external_sd # FEATURE_SDCARD_ENCRYPTION
#    symlink /data/media/external_sd /mnt/external_sd # FEATURE_SDCARD_ENCRYPTION
#    chmod 0755 /system/bin/ssbd
# service ssbd /system/bin/ssbd # FEATURE_SDCARD_ENCRYPTION
#    class main
#    disabled

on boot
    chmod 0660 /dev/ttyGS0
    chown system system /dev/ttyGS0

#brightness properties
    setprop ro.lge.lcd_default_brightness    92

#    setprop persist.sdcrypto.featuring 2 # FEATURE_SDCARD_ENCRYPTION
# LGE_CHANGE_S, 20120426, kwangbin.yim@lge.com, Re-define TCP buffer size for MPCS LTE network. Overwrite init.rc property
#   ReadMin, ReadInitial, ReadMax, WriteMin, WriteInitial, WriteMax,
    setprop net.tcp.buffersize.lte     4096,87380,1220608,4096,87380,1220608

    write /proc/sys/net/core/rmem_max  1220608
    write /proc/sys/net/core/wmem_max  1220608
# LGE_CHANGE_E, 20120426, kwangbin.yim@lge.com, Re-define TCP buffer size for MPCS LTE network
# LGE_UPDATE_START
# This is requested by VZW. Do not refer or copy below. This is for only VZW.
# 2012-04-23, G1-FS@lge.com
    setprop ro.device.memory.system 0
    setprop ro.device.memory.internal 8
# LGE_UPDATE_END
# Touch keyguard sysfs
    chown system system /sys/devices/virtual/input/lge_synaptics_touch/keyguard
    chown system system /sys/devices/virtual/input/lge_synaptics_touch/ic_rw

# Charging on/off sysfs
    chown system system /sys/devices/platform/msm_ssbi.0/pm8921-core/pm8921-charger/at_charge

service wpa_supplicant /system/bin/wpa_supplicant \
    -Dnl80211 -iwlan0 -c/data/misc/wifi/wpa_supplicant.conf
# we will start as root and wpa_supplicant will switch to user wifi
# after setting up the capabilities required for WEXT
# user wifi
# group wifi inet keystore
    class main
    socket wpa_wlan0 dgram 660 wifi wifi
    disabled
    oneshot

